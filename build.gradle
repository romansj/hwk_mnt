plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.0-RC2'
}

group = 'com.jromans'
version = '0.0.1-SNAPSHOT'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.AMAZON
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}


dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.2.0-RC2')
    developmentOnly platform('org.springframework.boot:spring-boot-dependencies:3.2.0-RC2')
    annotationProcessor platform('org.springframework.boot:spring-boot-dependencies:3.2.0-RC2')

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // region SPB web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.100.Final'
    implementation 'org.springframework:spring-web'
    // endregion

    // region SPB n/a
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // endregion


    // region docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    // endregion


    // region SPB dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    // endregion


    // region lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    // endregion


    // region parsing/mapping
    // mapstruct has to be after lombok
    implementation "org.mapstruct:mapstruct:1.5.5.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // endregion


    // region DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly("org.liquibase:liquibase-core:4.24.0")
    // endregion


    // region Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    // endregion

    implementation 'org.jetbrains:annotations:24.0.1'

}
configurations.configureEach {
    exclude group: "org.junit.vintage" // old junit 4
    exclude group: "org.skyscreamer", module: "jsonassert"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}